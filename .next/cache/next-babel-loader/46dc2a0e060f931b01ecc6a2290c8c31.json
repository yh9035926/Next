{"ast":null,"code":"import produce from \"immer\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LIKE_POST_REQUEST } from \"../type\";\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null\n};\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst rootReducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data); // action.data를 cconcat해서 기존 데이터에 추가\n        draft.hasMorePost = draft.mainPosts.length < 30;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        //const postIndex = state.mainPosts.findIndex(\n        //   (v) => v.id === action.data.postId\n        // );\n        // const post = { ...state.mainPosts[postIndex] };\n        //post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n      default:\n        break;\n    }\n  });\n};\n//immer 쓰면 ...state 안 써도 됨 state 대신 draft\n\nexport default rootReducer;","map":{"version":3,"names":["produce","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LIKE_POST_REQUEST","initialState","mainPosts","imagePaths","hasMorePost","addPostLoading","addPostDone","addPostError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostLoading","loadPostDone","loadPostError","addPost","data","type","addComment","rootReducer","state","action","draft","concat","length","error","unshift","filter","v","id","post","find","PostId","Comments"],"sources":["C:/Users/com/Desktop/YH/next/reducers/post.js"],"sourcesContent":["import produce from \"immer\";\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  LIKE_POST_REQUEST,\r\n} from \"../type\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n};\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data); // action.data를 cconcat해서 기존 데이터에 추가\r\n        draft.hasMorePost = draft.mainPosts.length < 30;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case LIKE_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        //const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        //post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n//immer 쓰면 ...state 안 써도 됨 state 대신 draft\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,OAAO;AAC3B,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,QACZ,SAAS;AAEhB,OAAO,MAAMC,YAAY,GAAG;EAC1BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE,IAAI;EAElBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE,IAAI;EAEnBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EAErBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EAErBC,iBAAiB,EAAE,KAAK;EACxBC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE,IAAI;EAErBC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCC,IAAI,EAAEpC,gBAAgB;EACtBmC;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,UAAU,GAAIF,IAAI,KAAM;EACnCC,IAAI,EAAEjC,mBAAmB;EACzBgC;AACF,CAAC,CAAC;AAEF,MAAMG,WAAW,GAAGA,CAACC,KAAK,GAAG3B,YAAY,EAAE4B,MAAM,KAAK;EACpD,OAAO1C,OAAO,CAACyC,KAAK,EAAGE,KAAK,IAAK;IAC/B,QAAQD,MAAM,CAACJ,IAAI;MACjB,KAAK3B,iBAAiB;QACpBgC,KAAK,CAACV,eAAe,GAAG,IAAI;QAC5BU,KAAK,CAACT,YAAY,GAAG,KAAK;QAC1BS,KAAK,CAACR,aAAa,GAAG,IAAI;QAC1B;MACF,KAAKvB,iBAAiB;QACpB+B,KAAK,CAACV,eAAe,GAAG,KAAK;QAC7BU,KAAK,CAACT,YAAY,GAAG,IAAI;QACzBS,KAAK,CAAC5B,SAAS,GAAG4B,KAAK,CAAC5B,SAAS,CAAC6B,MAAM,CAACF,MAAM,CAACL,IAAI,CAAC,CAAC,CAAC;QACvDM,KAAK,CAAC1B,WAAW,GAAG0B,KAAK,CAAC5B,SAAS,CAAC8B,MAAM,GAAG,EAAE;QAC/C;MACF,KAAKnC,iBAAiB;QACpBiC,KAAK,CAACV,eAAe,GAAG,KAAK;QAC7BU,KAAK,CAACR,aAAa,GAAGO,MAAM,CAACI,KAAK;QAClC;MAEF,KAAK5C,gBAAgB;QACnByC,KAAK,CAACzB,cAAc,GAAG,IAAI;QAC3ByB,KAAK,CAACxB,WAAW,GAAG,KAAK;QACzBwB,KAAK,CAACvB,YAAY,GAAG,IAAI;QACzB;MACF,KAAKjB,gBAAgB;QACnBwC,KAAK,CAACzB,cAAc,GAAG,KAAK;QAC5ByB,KAAK,CAACxB,WAAW,GAAG,IAAI;QACxBwB,KAAK,CAAC5B,SAAS,CAACgC,OAAO,CAACL,MAAM,CAACL,IAAI,CAAC;QACpC;MACF,KAAKpC,gBAAgB;QACnB0C,KAAK,CAACzB,cAAc,GAAG,KAAK;QAC5ByB,KAAK,CAACvB,YAAY,GAAGsB,MAAM,CAACI,KAAK;QACjC;MAEF,KAAKjC,iBAAiB;QACpB8B,KAAK,CAACzB,cAAc,GAAG,IAAI;QAC3ByB,KAAK,CAACxB,WAAW,GAAG,KAAK;QACzBwB,KAAK,CAACvB,YAAY,GAAG,IAAI;QACzB;MACF,KAAKjB,gBAAgB;QACnBwC,KAAK,CAACzB,cAAc,GAAG,KAAK;QAC5ByB,KAAK,CAACxB,WAAW,GAAG,IAAI;QACxBwB,KAAK,CAAC5B,SAAS,CAACgC,OAAO,CAACL,MAAM,CAACL,IAAI,CAAC;QACpC;MACF,KAAKpC,gBAAgB;QACnB0C,KAAK,CAACzB,cAAc,GAAG,KAAK;QAC5ByB,KAAK,CAACvB,YAAY,GAAGsB,MAAM,CAACI,KAAK;QACjC;MACF,KAAK5C,gBAAgB;QACnByC,KAAK,CAACzB,cAAc,GAAG,IAAI;QAC3ByB,KAAK,CAACxB,WAAW,GAAG,KAAK;QACzBwB,KAAK,CAACvB,YAAY,GAAG,IAAI;QACzB;MACF,KAAKjB,gBAAgB;QACnBwC,KAAK,CAACzB,cAAc,GAAG,KAAK;QAC5ByB,KAAK,CAACxB,WAAW,GAAG,IAAI;QACxBwB,KAAK,CAAC5B,SAAS,CAACgC,OAAO,CAACL,MAAM,CAACL,IAAI,CAAC;QACpC;MACF,KAAKpC,gBAAgB;QACnB0C,KAAK,CAACzB,cAAc,GAAG,KAAK;QAC5ByB,KAAK,CAACvB,YAAY,GAAGsB,MAAM,CAACI,KAAK;QACjC;MAEF,KAAKtC,mBAAmB;QACtBmC,KAAK,CAACb,iBAAiB,GAAG,IAAI;QAC9Ba,KAAK,CAACZ,cAAc,GAAG,KAAK;QAC5BY,KAAK,CAACX,eAAe,GAAG,IAAI;QAC5B;MACF,KAAKvB,mBAAmB;QACtBkC,KAAK,CAAC5B,SAAS,GAAG4B,KAAK,CAAC5B,SAAS,CAACiC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACL,IAAI,CAAC;QACrEM,KAAK,CAACb,iBAAiB,GAAG,KAAK;QAC/Ba,KAAK,CAACZ,cAAc,GAAG,IAAI;QAC3B;MACF,KAAKxB,mBAAmB;QACtBoC,KAAK,CAACb,iBAAiB,GAAG,KAAK;QAC/Ba,KAAK,CAACX,eAAe,GAAGU,MAAM,CAACI,KAAK;QACpC;MACF,KAAKzC,mBAAmB;QACtBsC,KAAK,CAAChB,iBAAiB,GAAG,IAAI;QAC9BgB,KAAK,CAACf,cAAc,GAAG,KAAK;QAC5Be,KAAK,CAACd,eAAe,GAAG,IAAI;QAC5B;MACF,KAAKvB,mBAAmB;QACtB;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA,MAAM6C,IAAI,GAAGR,KAAK,CAAC5B,SAAS,CAACqC,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACL,IAAI,CAACgB,MAAM,CAAC;QACrEF,IAAI,CAACG,QAAQ,CAACP,OAAO,CAACL,MAAM,CAACL,IAAI,CAAC;QAClCM,KAAK,CAAChB,iBAAiB,GAAG,KAAK;QAC/BgB,KAAK,CAACf,cAAc,GAAG,IAAI;QAC3B;MACF,KAAKxB,mBAAmB;QACtBuC,KAAK,CAAChB,iBAAiB,GAAG,KAAK;QAC/BgB,KAAK,CAACd,eAAe,GAAGa,MAAM,CAACI,KAAK;MAEtC;QACE;IAAM;EAEZ,CAAC,CAAC;AACJ,CAAC;AACD;;AAEA,eAAeN,WAAW"},"metadata":{},"sourceType":"module"}