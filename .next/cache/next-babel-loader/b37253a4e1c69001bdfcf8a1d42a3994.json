{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport React from \"react\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlinded } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      Images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlinded, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), \"// + \", __jsx(CommentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }), \"//  \", __jsx(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    User: PropTypes.object,\n    content: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["Avatar","Button","Card","Popover","React","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlinded","PropTypes","useSelector","PostImages","PostCard","post","id","state","_state$user$me","user","me","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","actions","key","content","Group","User","Fragment","type","Meta","avatar","nickname","title","description","CommentForm","Comments","propTypes","shape","number","arrayOf","object","isRequired"],"sources":["C:/Users/com/Desktop/YH/next/components/PostCard.js"],"sourcesContent":["import { Avatar, Button, Card, Popover } from \"antd\";\r\nimport React from \"react\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlinded,\r\n} from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\nconst PostCard = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages Images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlinded key=\"retweet\" />,\r\n          <HeartOutlined key=\"heart\" />,\r\n          <MessageOutlined key=\"comment\" />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        ></Card.Meta>\r\n      </Card>\r\n    // + <CommentForm />\r\n    //  <Comments />\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    User: PropTypes.object,\r\n    content: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}