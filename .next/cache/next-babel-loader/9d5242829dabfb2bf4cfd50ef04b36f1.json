{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../type\";\nvar PostForm = function PostForm() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths,\n    addPostLoading = _useSelector.addPostLoading,\n    addPostDone = _useSelector.addPostDone;\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var dispatch = useDispatch();\n  var _useInput = useInput(),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    text = _useInput2[0],\n    onChangeText = _useInput2[1],\n    setText = _useInput2[2];\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData\n      });\n    });\n  });\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  });\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert(\"게시글을 작성하세요.\");\n    }\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append(\"image\", p); //req.body.image\n    });\n\n    formData.append(\"content\", text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v, i) {\n    return __jsx(\"div\", {\n      key: v.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      onClick: onRemoveImage(i),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  }))) //map 안에 넣고 싶으면 ()넣어야함\n  ;\n};\n_s(PostForm, \"dDa1vWuO9UGVxysr7B01MnT0B+Y=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useRef","Button","Form","Input","useCallback","useDispatch","useSelector","addPost","useInput","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","PostForm","_s","_useSelector","state","post","imagePaths","addPostLoading","addPostDone","imageInput","onClickImageUpload","current","click","dispatch","_useInput","_useInput2","_slicedToArray","text","onChangeText","setText","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","onRemoveImage","index","onSubmit","trim","alert","formData","p","__jsx","encType","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","name","multiple","hidden","ref","onClick","htmlType","map","v","i","key","id","src","concat","_c","$RefreshReg$"],"sources":["C:/Users/com/Desktop/YH/next/components/PostForm.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../type\";\n\nconst PostForm = () => {\n  const { imagePaths, addPostLoading, addPostDone } = useSelector(\n    (state) => state.post\n  );\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput();\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData,\n      });\n    });\n  });\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  });\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert(\"게시글을 작성하세요.\");\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append(\"image\", p); //req.body.image\n    });\n    formData.append(\"content\", text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n  return (\n    <Form encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea value={text} onChange={onChangeText} />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\">\n          짹쨱\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v.id}>\n            <img src={`http://localhost:3065/${v}`} />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form> //map 안에 넣고 싶으면 ()넣어야함\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}