{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../type\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput();\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  console.log(A);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useEffect","useInput","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","_state$user$me","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","A","__jsx","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","TextArea","value","onChange","rows","htmlType","loading","propTypes","object","isRequired"],"sources":["C:/Users/com/Desktop/YH/next/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../type\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const { addCommentDone, addCommentLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  const [commentText, onChangeCommentText, setCommentText] = useInput();\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText(\"\");\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId: id },\r\n    });\r\n  }, [commentText, id]);\r\n  console.log(A);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button htmlType=\"submit\" loading={addCommentLoading}>\r\n          삐약\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\nexport default CommentForm;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,SAAS;AAE7C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAK;IAAA,IAAAC,cAAA;IAAA,QAAAA,cAAA,GAAKD,KAAK,CAACE,IAAI,CAACC,EAAE,cAAAF,cAAA,uBAAbA,cAAA,CAAeF,EAAE;EAAA,EAAC;EACpD,MAAM;IAAEK,cAAc;IAAEC;EAAkB,CAAC,GAAGX,WAAW,CACtDM,KAAK,IAAKA,KAAK,CAACH,IAAI,CACtB;EACD,MAAM,CAACS,WAAW,EAAEC,mBAAmB,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,EAAE;EAErED,SAAS,CAAC,MAAM;IACd,IAAIc,cAAc,EAAE;MAClBI,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMK,eAAe,GAAGpB,WAAW,CAAC,MAAM;IACxCqB,OAAO,CAACC,GAAG,CAACd,IAAI,CAACE,EAAE,EAAEO,WAAW,CAAC;IACjCR,QAAQ,CAAC;MACPc,IAAI,EAAEjB,mBAAmB;MACzBkB,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAW;QAAES,MAAM,EAAElB,IAAI,CAACE,EAAE;QAAEiB,MAAM,EAAEjB;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACO,WAAW,EAAEP,EAAE,CAAC,CAAC;EACrBW,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;EAEd,OACEC,KAAA,CAAChC,IAAI;IAACiC,QAAQ,EAAEV,eAAgB;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9BP,KAAA,CAAChC,IAAI,CAACwC,IAAI;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACRP,KAAA,CAAC/B,KAAK,CAACwC,QAAQ;IACbC,KAAK,EAAEtB,WAAY;IACnBuB,QAAQ,EAAEtB,mBAAoB;IAC9BuB,IAAI,EAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACR,EACFP,KAAA,CAACjC,MAAM;IAAC8C,QAAQ,EAAC,QAAQ;IAACC,OAAO,EAAE3B,iBAAkB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,kBAE5C,CACC,CACP;AAEX,CAAC;AAED7B,WAAW,CAACqC,SAAS,GAAG;EACtBpC,IAAI,EAAEL,SAAS,CAAC0C,MAAM,CAACC;AACzB,CAAC;AACD,eAAevC,WAAW"},"metadata":{},"sourceType":"module"}