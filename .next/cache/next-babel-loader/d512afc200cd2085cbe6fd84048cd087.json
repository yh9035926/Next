{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      //console.log(\"HYDRATE\", action);\n      return action.payload;\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","rootReducer","state","action","type","payload","combinedReducer"],"sources":["C:/Users/com/Desktop/YH/next/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      //console.log(\"HYDRATE\", action);\n      return action.payload;\n    default: {\n      const combinedReducer = combineReducers({\n        user,\n        post,\n      });\n      return combinedReducer(state, action);\n    }\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,OAAO;AAEvC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,MAAM,EAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,OAAO;MACV;MACA,OAAOM,MAAM,CAACE,OAAO;IACvB;MAAS;QACP,IAAMC,eAAe,GAAGN,eAAe,CAAC;UACtCF,IAAI,EAAJA,IAAI;UACJC,IAAI,EAAJA;QACF,CAAC,CAAC;QACF,OAAOO,eAAe,CAACJ,KAAK,EAAEC,MAAM,CAAC;MACvC;EAAC;AAEL,CAAC;AAED,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}