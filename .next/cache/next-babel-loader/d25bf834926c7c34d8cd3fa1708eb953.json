{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from \"../type\";\nimport faker from \"faker\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\ninitialState.mainPosts = initialState.mainPosts.concat(Array(20).fill().map(function (v, i) {\n  return {\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph(),\n    Image: [{\n      src: faker.image.imageUrl()\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n}));\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"제로소\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로소\"\n    }\n  };\n};\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        //const postIndex = state.mainPosts.findIndex(\n        //   (v) => v.id === action.data.postId\n        // );\n        // const post = { ...state.mainPosts[postIndex] };\n        //post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n      default:\n        break;\n    }\n  });\n};\n//immer 쓰면 ...state 안 써도 됨 state 대신 draft\n\nexport default rootReducer;","map":{"version":3,"names":["shortId","produce","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","faker","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","concat","Array","fill","map","v","i","id","generate","User","nickname","name","findName","content","lorem","paragraph","Image","src","image","imageUrl","Comments","sentence","addPost","data","type","addComment","dummyPost","Images","dummyComment","rootReducer","state","arguments","length","undefined","action","draft","unshift","error","filter","post","find","postId"],"sources":["C:/Users/com/Desktop/YH/next/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n} from \"../type\";\r\nimport faker from \"faker\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n};\r\n\r\ninitialState.mainPosts = initialState.mainPosts.concat(\r\n  Array(20)\r\n    .fill()\r\n    .map((v, i) => ({\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: faker.lorem.paragraph(),\r\n      Image: [\r\n        {\r\n          src: faker.image.imageUrl(),\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n      ],\r\n    }))\r\n);\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로소\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로소\",\r\n  },\r\n});\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        //const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        //post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n//immer 쓰면 ...state 안 써도 됨 state 대신 draft\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}