{"ast":null,"code":"import { LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, FOLLOW_REQUEST, UNFOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from \"../type\";\nimport { all, fork, delay, put, takeEvery, takeLeading, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      //put은 dipatch\n\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      //put은 dipatch\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      //put은 dipatch\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      //put은 dipatch\n\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      //put은 dipatch\n\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n//-------------------------------------------------------------------\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      //put은 dipatch\n\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, logIn); //반복\n}\n\nfunction* watchLogout() {\n  yield takeLeading(LOG_OUT_REQUEST, logOut); //첫 번째 것만\n}\n\nfunction* watchSingUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp); //첫 번째 것만\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_REQUEST, follow); //반복\n}\n\nfunction* watchUnfollow() {\n  yield takeEvery(UNFOLLOW_REQUEST, unfollow); //반복\n}\n\nfunction* watchChangeNickname() {\n  yield takeEvery(CHANGE_NICKNAME_REQUEST, changeNickname); //반복\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLogin), fork(watchLogout), fork(watchSingUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"names":["LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","all","fork","delay","put","takeEvery","takeLeading","takeLatest","call","axios","logInAPI","data","post","logIn","action","result","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","patch","follow","unfollowAPI","delete","unfollow","changeNicknameAPI","nickname","changeNickname","watchLogin","watchLogout","watchSingUp","watchFollow","watchUnfollow","watchChangeNickname","userSaga"],"sources":["C:/Users/com/Desktop/YH/next/sagas/user.js"],"sourcesContent":["import {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_REQUEST,\r\n  LOG_IN_REQUEST,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  FOLLOW_REQUEST,\r\n  UNFOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  UNFOLLOW_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n} from \"../type\";\r\n\r\nimport {\r\n  all,\r\n  fork,\r\n  delay,\r\n  put,\r\n  takeEvery,\r\n  takeLeading,\r\n  takeLatest,\r\n  call,\r\n} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n\r\n    yield put({\r\n      //put은 dipatch\r\n\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      //put은 dipatch\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      //put은 dipatch\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followAPI, action.data);\r\n\r\n    yield put({\r\n      //put은 dipatch\r\n\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction unfollowAPI(data) {\r\n  return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    const result = yield call(unfollowAPI, action.data);\r\n\r\n    yield put({\r\n      //put은 dipatch\r\n\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch(\"/user/nickname\", { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      //put은 dipatch\r\n\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(LOG_IN_REQUEST, logIn); //반복\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLeading(LOG_OUT_REQUEST, logOut); //첫 번째 것만\r\n}\r\n\r\nfunction* watchSingUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp); //첫 번째 것만\r\n}\r\nfunction* watchFollow() {\r\n  yield takeEvery(FOLLOW_REQUEST, follow); //반복\r\n}\r\nfunction* watchUnfollow() {\r\n  yield takeEvery(UNFOLLOW_REQUEST, unfollow); //반복\r\n}\r\n\r\n\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeEvery(CHANGE_NICKNAME_REQUEST, changeNickname); //반복\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLogin),\r\n    fork(watchLogout),\r\n    fork(watchSingUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}