{"ast":null,"code":"import { LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS } from \"../components/type\";\nimport { all, fork, delay, put, takeEvery, takeLeading } from \"redux-saga/effects\";\nimport axios from \"axios\";\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      //put은 dipatch\n\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\nfunction* logOut() {\n  try {\n    yield delay(1000);\n\n    // const result = yield call(logOutAPI);\n    yield put({\n      //put은 dipatch\n      type: \"LOG_OUT_SUCCESS\"\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_OUT_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogin() {\n  yield takeEvery(\"LOG_IN_REQUEST\", logIn); //반복\n}\n\nfunction* watchLogout() {\n  yield takeLeading(\"LOG_OUT_REQUEST\", logOut); //첫 번째 것만\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"names":["LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","all","fork","delay","put","takeEvery","takeLeading","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogin","watchLogout","userSaga"],"sources":["C:/Users/com/Desktop/YH/next/sagas/user.js"],"sourcesContent":["import {\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_REQUEST,\r\n  LOG_IN_REQUEST,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_SUCCESS,\r\n} from \"../components/type\";\r\n\r\nimport {\r\n  all,\r\n  fork,\r\n  delay,\r\n  put,\r\n  takeEvery,\r\n  takeLeading,\r\n} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/api/login\", data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      //put은 dipatch\r\n\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/api/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield delay(1000);\r\n\r\n    // const result = yield call(logOutAPI);\r\n    yield put({\r\n      //put은 dipatch\r\n      type: \"LOG_OUT_SUCCESS\",\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"LOG_OUT_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(\"LOG_IN_REQUEST\", logIn); //반복\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLeading(\"LOG_OUT_REQUEST\", logOut); //첫 번째 것만\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout)]);\r\n}\r\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,eAAe,EACfC,eAAe,QACV,oBAAoB;AAE3B,SACEC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,GAAG,EACHC,SAAS,EACTC,WAAW,QACN,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,OAAOF,KAAK,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACvC;AAEA,UAAUE,KAAKA,CAACC,MAAM,EAAE;EACtB,IAAI;IACF;IACA,MAAMT,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MACR;;MAEAS,IAAI,EAAEjB,cAAc;MACpBa,IAAI,EAAEG,MAAM,CAACH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMV,GAAG,CAAC;MACRS,IAAI,EAAElB,cAAc;MACpBc,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,SAASO,SAASA,CAAA,EAAG;EACnB,OAAOT,KAAK,CAACG,IAAI,CAAC,aAAa,CAAC;AAClC;AAEA,UAAUO,MAAMA,CAAA,EAAG;EACjB,IAAI;IACF,MAAMd,KAAK,CAAC,IAAI,CAAC;;IAEjB;IACA,MAAMC,GAAG,CAAC;MACR;MACAS,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMV,GAAG,CAAC;MACRS,IAAI,EAAE,iBAAiB;MACvBJ,IAAI,EAAEK,GAAG,CAACC,QAAQ,CAACN;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUS,UAAUA,CAAA,EAAG;EACrB,MAAMb,SAAS,CAAC,gBAAgB,EAAEM,KAAK,CAAC,CAAC,CAAC;AAC5C;;AAEA,UAAUQ,WAAWA,CAAA,EAAG;EACtB,MAAMb,WAAW,CAAC,iBAAiB,EAAEW,MAAM,CAAC,CAAC,CAAC;AAChD;;AAEA,eAAe,UAAUG,QAAQA,CAAA,EAAG;EAClC,MAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,UAAU,CAAC,EAAEhB,IAAI,CAACiB,WAAW,CAAC,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module"}