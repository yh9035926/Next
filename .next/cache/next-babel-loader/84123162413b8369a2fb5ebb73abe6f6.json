{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport { Avatar, Button, Card, List, Popover } from \"antd\";\nimport { Comment } from \"@ant-design/compatible\";\nimport React, { useCallback, useState } from \"react\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartFilled } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../type\";\nimport FollowButton from \"./FollowButton\";\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onLike = useCallback(() => {}, []);\n  const {\n    removerPostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartFilled, {\n      key: \"heartfilled\",\n      onClick: onUnLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        loading: removerPostLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 27\n        }\n      }, item.User.nickname[0]),\n      content: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    User: PropTypes.object,\n    content: PropTypes.object,\n    createAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["Avatar","Button","Card","List","Popover","Comment","React","useCallback","useState","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartFilled","PropTypes","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","id","state","_state$user$me","user","me","onLike","removerPostLoading","commentFormOpened","setCommentFormOpened","onToggleComment","prev","onRemovePost","type","data","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","key","liked","onClick","onUnLike","content","Group","User","Fragment","loading","extra","Meta","avatar","nickname","title","description","postData","header","Comments","length","itemLayout","dataSource","renderItem","item","author","propTypes","shape","number","arrayOf","object","createAt","string","isRequired"],"sources":["C:/Users/com/Desktop/YH/next/components/PostCard.js"],"sourcesContent":["import { Avatar, Button, Card, List, Popover } from \"antd\";\r\nimport { Comment } from \"@ant-design/compatible\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../type\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const id = useSelector((state) => state.user.me?.id);\r\n\r\n  const onLike = useCallback(() => {\r\n  \r\n  }, []);\r\n  const { removerPostLoading } = useSelector((state) => state.post);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartFilled key=\"heartfilled\" onClick={onUnLike} />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      onClick={onRemovePost}\r\n                      loading={removerPostLoading}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        ></Card.Meta>\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n      {/*<CommentForm />}\r\n      {<Comments />*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    User: PropTypes.object,\r\n    content: PropTypes.object,\r\n    createAt: PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}