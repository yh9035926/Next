{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartFilled } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      Images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartFilled, {\n      key: \"heartfilled\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"\\uB313\\uAE00 \\uBD80\\uBD84\"));\n};\n_s(PostCard, \"kbXpCmKCzErvC3ii+rnpVdoeBnM=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    User: PropTypes.object,\n    content: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Avatar","Button","Card","Popover","React","useCallback","useState","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartFilled","PropTypes","useSelector","PostImages","PostCard","_ref","_s","post","id","state","_state$user$me","user","me","_useState","liked","setLiked","onToggleLike","prev","_useState2","commentFormOpened","setCommentFormOpened","onToggleComment","__jsx","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","actions","key","onClick","content","Group","User","Fragment","type","Meta","avatar","nickname","title","description","_c","propTypes","shape","number","arrayOf","object","Comments","isRequired","$RefreshReg$"],"sources":["C:/Users/com/Desktop/YH/next/components/PostCard.js"],"sourcesContent":["import { Avatar, Button, Card, Popover } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\nconst PostCard = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const [liked, setLiked] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages Images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartOutlined key=\"heart\" />\r\n          ) : (\r\n            <HeartFilled key=\"heartfilled\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        ></Card.Meta>\r\n      </Card>\r\n      {commentFormOpened && <div>댓글 부분</div>}\r\n      {/*<CommentForm />}\r\n      {<Comments />*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    User: PropTypes.object,\r\n    content: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}