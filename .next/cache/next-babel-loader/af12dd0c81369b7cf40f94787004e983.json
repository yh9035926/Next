{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText] = useInput();\n  const onSubmitComment = useCallback(() => {}, []);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useInput","PropTypes","CommentForm","post","commentText","onChangeCommentText","onSubmitComment","__jsx","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","TextArea","value","onChange","rows","propTypes","string","isRequired","data","array"],"sources":["C:/Users/com/Desktop/YH/next/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useCallback } from \"react\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport PropTypes from \"prop-types\";\r\nconst CommentForm = ({ post }) => {\r\n  const [commentText, onChangeCommentText] = useInput();\r\n  const onSubmitComment = useCallback(() => {}, []);\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button>삐약</Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.string.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n  };\r\nexport default CommentForm;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAM,CAACC,WAAW,EAAEC,mBAAmB,CAAC,GAAGL,QAAQ,EAAE;EACrD,MAAMM,eAAe,GAAGP,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACjD,OACEQ,KAAA,CAACX,IAAI;IAACY,QAAQ,EAAEF,eAAgB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9BP,KAAA,CAACX,IAAI,CAACmB,IAAI;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACRP,KAAA,CAACV,KAAK,CAACmB,QAAQ;IACbC,KAAK,EAAEb,WAAY;IACnBc,QAAQ,EAAEb,mBAAoB;IAC9Bc,IAAI,EAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACR,EACFP,KAAA,CAACZ,MAAM;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,kBAAY,CACT,CACP;AAEX,CAAC;AAEDZ,WAAW,CAACkB,SAAS,GAAG;EACpBjB,IAAI,EAAEF,SAAS,CAACoB,MAAM,CAACC,UAAU;EACjCC,IAAI,EAAEtB,SAAS,CAACuB,KAAK,CAACF;AACxB,CAAC;AACH,eAAepB,WAAW"},"metadata":{},"sourceType":"module"}