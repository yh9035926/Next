{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST } from \"../type\";\nvar PostForm = function PostForm() {\n  _s();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths,\n    addPostLoading = _useSelector.addPostLoading,\n    addPostDone = _useSelector.addPostDone;\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var dispatch = useDispatch();\n  var _useInput = useInput(),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    text = _useInput2[0],\n    onChangeText = _useInput2[1],\n    setText = _useInput2[2];\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, [text]);\n  return __jsx(Form, {\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n_s(PostForm, \"r/h8k87QhUeaLvDUP667zqrYhTw=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useRef","Button","Form","Input","useCallback","useDispatch","useSelector","addPost","useInput","ADD_POST_REQUEST","PostForm","_s","_useSelector","state","post","imagePaths","addPostLoading","addPostDone","imageInput","onClickImageUpload","current","click","dispatch","_useInput","_useInput2","_slicedToArray","text","onChangeText","setText","onSubmit","type","data","__jsx","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","multiple","hidden","ref","onClick","htmlType","map","v","key","id","src","_c","$RefreshReg$"],"sources":["C:/Users/com/Desktop/YH/next/components/PostForm.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPost } from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_POST_REQUEST } from \"../type\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostLoading, addPostDone } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText, setText] = useInput();\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: {\r\n        text,\r\n      },\r\n    });\r\n  }, [text]);\r\n  return (\r\n    <Form onFinish={onSubmit}>\r\n      <Input.TextArea value={text} onChange={onChangeText} />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          짹쨱\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v.id}>\r\n            <img src={v} />\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}