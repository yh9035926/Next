{"ast":null,"code":"import produce from \"immer\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from \"../type\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null\n};\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data); // action.data를 cconcat해서 기존 데이터에 추가\n        draft.hasMorePost = draft.mainPosts.length < 30;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      //-------------------------------------------------------------------\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      //-------------------------------------------------------------------\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      //-------------------------------------------------------------------\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      //-------------------------------------------------------------------\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      //-------------------------------------------------------------------\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameremovePostLoading = true;\n        draft.changeNicknameremovePostDone = false;\n        draft.changeNicknameremovePostError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        draft.changeNicknameremovePostLoading = false;\n        draft.changeNicknameremovePostDone = true;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameremovePostLoading = false;\n        draft.changeNicknameremovePostError = action.error;\n        break;\n      //-------------------------------------------------------------------\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        //const postIndex = state.mainPosts.findIndex(\n        //   (v) => v.id === action.data.postId\n        // );\n        // const post = { ...state.mainPosts[postIndex] };\n        //post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n      //-------------------------------------------------------------------\n\n      default:\n        break;\n    }\n  });\n};\n//immer 쓰면 ...state 안 써도 됨 state 대신 draft\n\nexport default rootReducer;","map":{"version":3,"names":["produce","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","initialState","mainPosts","imagePaths","hasMorePost","addPostLoading","addPostDone","addPostError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostLoading","loadPostDone","loadPostError","changeNicknameLoading","changeNicknameDone","changeNicknameError","addPost","data","type","addComment","rootReducer","state","arguments","length","undefined","action","draft","concat","error","unshift","post","find","v","id","PostId","Likers","push","UserId","filter","changeNicknameremovePostLoading","changeNicknameremovePostDone","changeNicknameremovePostError","Comments"],"sources":["C:/Users/com/Desktop/YH/next/reducers/post.js"],"sourcesContent":["import produce from \"immer\";\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n} from \"../type\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n\r\n  changeNicknameLoading: false,\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n};\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data); // action.data를 cconcat해서 기존 데이터에 추가\r\n        draft.hasMorePost = draft.mainPosts.length < 30;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      //-------------------------------------------------------------------\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      //-------------------------------------------------------------------\r\n\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      //-------------------------------------------------------------------\r\n\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      //-------------------------------------------------------------------\r\n\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      //-------------------------------------------------------------------\r\n\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameremovePostLoading = true;\r\n        draft.changeNicknameremovePostDone = false;\r\n        draft.changeNicknameremovePostError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        draft.changeNicknameremovePostLoading = false;\r\n        draft.changeNicknameremovePostDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameremovePostLoading = false;\r\n        draft.changeNicknameremovePostError = action.error;\r\n        break;\r\n      //-------------------------------------------------------------------\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS:\r\n        //const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        //post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n      //-------------------------------------------------------------------\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n//immer 쓰면 ...state 안 써도 됨 state 대신 draft\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}