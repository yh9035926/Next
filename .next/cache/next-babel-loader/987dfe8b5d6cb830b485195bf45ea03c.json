{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from \"../type\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫 번째 게시글금 #해시태그 #익스프레스\",\n    Images: [{\n      src: \"https://placeimg.com/200/100/1\"\n    }, {\n      src: \"https://placeimg.com/200/100/2\"\n    }, {\n      src: \"https://placeimg.com/200/100/3\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 개장판이 나왔군요\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"만두나 먹어야지\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = data => ({\n  id: 2,\n  content: \"더미데이터입니다\",\n  User: {\n    id: 1,\n    nickname: \"제로소\"\n  },\n  Images: [],\n  Comments: []\n});\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","addPost","data","type","addComment","dummyPost","rootReducer","state","action","_objectSpread","error"],"sources":["C:/Users/com/Desktop/YH/next/reducers/post.js"],"sourcesContent":["import {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n} from \"../type\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n      },\r\n      content: \"첫 번째 게시글금 #해시태그 #익스프레스\",\r\n      Images: [\r\n        {\r\n          src: \"https://placeimg.com/200/100/1\",\r\n        },\r\n        {\r\n          src: \"https://placeimg.com/200/100/2\",\r\n        },\r\n        {\r\n          src: \"https://placeimg.com/200/100/3\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 개장판이 나왔군요\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"만두나 먹어야지\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: 2,\r\n  content: \"더미데이터입니다\",\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로소\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n        addCommentDone: false,\r\n        addCommentError: null,\r\n      };\r\n    case ADD_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost, ...state.mainPosts],\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}