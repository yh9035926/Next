{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../type\";\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostLoading,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput();\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData\n      });\n    });\n  });\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      //trim 공백 제외\n      return alert(\"게시글을 작성하세요.\");\n    }\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append(\"image\", p); //req.body.image\n    });\n\n    formData.append(\"content\", text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\")))))) //map 안에 넣고 싶으면 ()넣어야함\n  ;\n};\n\nexport default PostForm;","map":{"version":3,"names":["React","useEffect","useRef","Button","Form","Input","useCallback","useDispatch","useSelector","useInput","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","PostForm","imagePaths","addPostLoading","addPostDone","state","post","imageInput","onClickImageUpload","current","click","dispatch","text","onChangeText","setText","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","onRemoveImage","index","onSubmit","trim","alert","formData","p","__jsx","encType","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","name","multiple","hidden","ref","onClick","htmlType","map","v","i","key","id","src"],"sources":["C:/Users/com/Desktop/YH/next/components/PostForm.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../type\";\n\nconst PostForm = () => {\n  const { imagePaths, addPostLoading, addPostDone } = useSelector(\n    (state) => state.post\n  );\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput();\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData,\n      });\n    });\n  });\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  });\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) { //trim 공백 제외\n      return alert(\"게시글을 작성하세요.\");\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append(\"image\", p); //req.body.image\n    });\n    formData.append(\"content\", text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n  return (\n    <Form encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea value={text} onChange={onChangeText} />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\">\n          짹쨱\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v.id}>\n            <img src={`http://localhost:3065/${v}`} />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form> //map 안에 넣고 싶으면 ()넣어야함\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}