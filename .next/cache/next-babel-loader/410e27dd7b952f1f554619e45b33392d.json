{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport shortId from \"shortid\";\nimport produce from \"immer\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from \"../type\";\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://placeimg.com/200/100/1\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://placeimg.com/200/100/2\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://placeimg.com/200/100/3\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"우와 개장판이 나왔군요\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"hero\"\n      },\n      content: \"만두나 먹어야지\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"제로소\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로소\"\n    }\n  };\n};\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: true,\n          addPostDone: false,\n          addPostError: null\n        });\n      case ADD_POST_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n          addPostLoading: false,\n          addPostDone: true\n        });\n      case ADD_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: false,\n          addPostError: action.error\n        });\n      case REMOVE_POST_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: true,\n          removePostDone: false,\n          removePostError: null\n        });\n      case REMOVE_POST_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          }),\n          removePostLoading: false,\n          removePostDone: true\n        });\n      case REMOVE_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: false,\n          removePostError: action.error\n        });\n      case ADD_COMMENT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null\n        });\n      case ADD_COMMENT_SUCCESS:\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n        var mainPosts = _toConsumableArray(state.mainPosts);\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      case ADD_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentError: action.error\n        });\n      default:\n        return state;\n    }\n  });\n};\nexport default rootReducer;","map":{"version":3,"names":["shortId","produce","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","addPost","data","type","addComment","dummyPost","dummyComment","rootReducer","state","arguments","length","undefined","action","draft","_objectSpread","concat","_toConsumableArray","error","filter","v","postIndex","findIndex","postId","post"],"sources":["C:/Users/com/Desktop/YH/next/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nimport {\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n} from \"../type\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\r\n      Images: [\r\n        { id: shortId.generate(), src: \"https://placeimg.com/200/100/1\" },\r\n        { id: shortId.generate(), src: \"https://placeimg.com/200/100/2\" },\r\n        { id: shortId.generate(), src: \"https://placeimg.com/200/100/3\" },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 개장판이 나왔군요\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"만두나 먹어야지\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n};\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로소\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로소\",\r\n  },\r\n});\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST:\r\n        return {\r\n          ...state,\r\n          addPostLoading: true,\r\n          addPostDone: false,\r\n          addPostError: null,\r\n        };\r\n      case ADD_POST_SUCCESS:\r\n        return {\r\n          ...state,\r\n          mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n          addPostLoading: false,\r\n          addPostDone: true,\r\n        };\r\n      case ADD_POST_FAILURE:\r\n        return {\r\n          ...state,\r\n          addPostLoading: false,\r\n          addPostError: action.error,\r\n        };\r\n      case REMOVE_POST_REQUEST:\r\n        return {\r\n          ...state,\r\n          removePostLoading: true,\r\n          removePostDone: false,\r\n          removePostError: null,\r\n        };\r\n      case REMOVE_POST_SUCCESS:\r\n        return {\r\n          ...state,\r\n          mainPosts: state.mainPosts.filter((v) => v.id !== action.data),\r\n          removePostLoading: false,\r\n          removePostDone: true,\r\n        };\r\n      case REMOVE_POST_FAILURE:\r\n        return {\r\n          ...state,\r\n          removePostLoading: false,\r\n          removePostError: action.error,\r\n        };\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        return {\r\n          ...state,\r\n          addCommentLoading: true,\r\n          addCommentDone: false,\r\n          addCommentError: null,\r\n        };\r\n      case ADD_COMMENT_SUCCESS:\r\n        const postIndex = state.mainPosts.findIndex(\r\n          (v) => v.id === action.data.postId\r\n        );\r\n        const post = { ...state.mainPosts[postIndex] };\r\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        const mainPosts = [...state.mainPosts];\r\n        mainPosts[postIndex] = post;\r\n\r\n        return {\r\n          ...state,\r\n          mainPosts,\r\n          addCommentLoading: false,\r\n          addCommentDone: true,\r\n        };\r\n\r\n      case ADD_COMMENT_FAILURE:\r\n        return {\r\n          ...state,\r\n          addCommentLoading: false,\r\n          addCommentError: action.error,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}