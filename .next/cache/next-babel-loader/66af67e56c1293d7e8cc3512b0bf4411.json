{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\com\\\\Desktop\\\\YH\\\\next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST, LOAD_MY_INFO_REQUEST } from \"../type\";\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  console.log(LO);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.screenY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) if (hasMorePost && !loadPostLoading) {\n        dispatch({\n          type: LOAD_POST_REQUEST\n        });\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostLoading","post","type","console","log","LO","onScroll","window","screenY","document","documentElement","clientHeight","scrollHeight","scrollY","addEventListener","removeEventListener","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","id"],"sources":["C:/Users/com/Desktop/YH/next/pages/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport { LOAD_POST_REQUEST, LOAD_MY_INFO_REQUEST } from \"../type\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n    });\r\n  }, []);\r\n  console.log(LO)\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(\r\n        window.screenY,\r\n        document.documentElement.clientHeight,\r\n        document.documentElement.scrollHeight\r\n      );\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      )\r\n        if (hasMorePost && !loadPostLoading) {\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n          });\r\n        }\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,EAAEC,oBAAoB,QAAQ,SAAS;AAEjE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES;EAAG,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACjD,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAgB,CAAC,GAAGb,WAAW,CAC5DS,KAAK,IAAKA,KAAK,CAACK,IAAI,CACtB;EAEDhB,SAAS,CAAC,MAAM;IACdS,QAAQ,CAAC;MACPQ,IAAI,EAAEV;IACR,CAAC,CAAC;IACFE,QAAQ,CAAC;MACPQ,IAAI,EAAEX;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACNY,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC;EACfpB,SAAS,CAAC,MAAM;IACd,SAASqB,QAAQA,CAAA,EAAG;MAClBH,OAAO,CAACC,GAAG,CACTG,MAAM,CAACC,OAAO,EACdC,QAAQ,CAACC,eAAe,CAACC,YAAY,EACrCF,QAAQ,CAACC,eAAe,CAACE,YAAY,CACtC;MACD,IACEL,MAAM,CAACM,OAAO,GAAGJ,QAAQ,CAACC,eAAe,CAACC,YAAY,GACtDF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAG,GAAG,EAE3C,IAAIb,WAAW,IAAI,CAACC,eAAe,EAAE;QACnCN,QAAQ,CAAC;UACPQ,IAAI,EAAEX;QACR,CAAC,CAAC;MACJ;IACJ;IACAgB,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAER,QAAQ,CAAC;IAC3C,OAAO,MAAM;MACXC,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAET,QAAQ,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,CAACP,WAAW,EAAEC,eAAe,CAAC,CAAC;EAElC,OACEgB,KAAA,CAAC5B,SAAS;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACP3B,EAAE,IAAIqB,KAAA,CAAC1B,QAAQ;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,EAClBxB,SAAS,CAACyB,GAAG,CAAEtB,IAAI,IAClBe,KAAA,CAAC3B,QAAQ;IAACmC,GAAG,EAAEvB,IAAI,CAACwB,EAAG;IAACxB,IAAI,EAAEA,IAAK;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACpC,CAAC,CACQ;AAEhB,CAAC;AAED,eAAe7B,IAAI"},"metadata":{},"sourceType":"module"}